from snakemake.utils import min_version
import pandas as pd
import numpy as np

min_version("8.0")


# read a table from the config file with the key "samples" and the file path to hifi data
print(config)

tbl = pd.read_csv(
    config["manifest"],
    sep="\\s+",
    index_col=0,
)


wildcard_constraints:
    sm="|".join(tbl.index),
    hap="|".join(["hap1", "hap2"]),
    asm_type="bp|dip",
    parental="pat|mat",


include: "rules/common.smk"
include: "rules/asm.smk"


HAS_PARENTAL = {}
final_assemblies = []
for row in tbl.itertuples():
    sm = row.Index
    if pd.isna(row.paternal) or pd.isna(row.maternal):
        asm_type = "bp"
        HAS_PARENTAL[sm] = False
    else:
        asm_type = "dip"
        HAS_PARENTAL[sm] = True
    print(f"Processing {sm} with assembly type {asm_type}")
    final_assemblies += expand(
        rules.gfa_to_fa.output.fa,
        sm=sm,
        hap=["hap1", "hap2"],
        asm_type=asm_type,
    )


print(final_assemblies)


rule all:
    input:
        final_assemblies,
