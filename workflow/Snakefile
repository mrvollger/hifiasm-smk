from snakemake.utils import min_version
import pandas as pd
import numpy as np

min_version("8.0")

# read in the manifest of samples
tbl = pd.read_csv(
    config["manifest"],
    sep="\\s+",
    index_col=0,
    dtype={
        "sample": str,
        "hifi": str,
        "paternal": str,
        "maternal": str,
    },
)
# the columns with reads can have multiple entries, so we need to split them
tbl["hifi"] = tbl["hifi"].str.split(",")
tbl["maternal"] = tbl["maternal"].str.split(",")
tbl["paternal"] = tbl["paternal"].str.split(",")
# make them lists even if they are empty


# include the helper functions
include: "rules/common.smk"


# make the references
REFS = set_references()


wildcard_constraints:
    sm="|".join(tbl.index),
    hap="|".join(["hap1", "hap2"]),
    asm_type="bp|dip",
    parental="pat|mat",
    read_type="hifi|mat|pat",
    idx=r"\d+",
    ref="|".join(REFS.keys()),


# include the rules
include: "rules/asm.smk"


# define the output files based on the assembly type
HAS_PARENTAL = {}
results = []
for row in tbl.itertuples():
    sm = row.Index
    # check if it is a list
    if type(row.paternal) is list and len(row.paternal) > 0 and len(row.maternal) > 0:
        asm_type = "dip"
        HAS_PARENTAL[sm] = True
    elif pd.isna(row.paternal) or pd.isna(row.maternal):
        asm_type = "bp"
        HAS_PARENTAL[sm] = False
    else:
        ValueError(f"Unknown assembly type for {sm}, shouldn't be here")
    print(f"Processing {sm} with assembly type {asm_type}")
    results += expand(
        rules.gfa_to_fa.output.fa,
        sm=sm,
        hap=["hap1", "hap2"],
        asm_type=asm_type,
    )


if REFS:
    for ref in REFS.keys():
        for sm in tbl.index:
            asm_type = "bp" if not HAS_PARENTAL[sm] else "dip"
            results += expand(
                rules.bam_to_paf.output.paf,
                sm=sm,
                hap=["hap1", "hap2"],
                asm_type=asm_type,
                ref=ref,
            )

print(f"Results: {results}")


rule all:
    input:
        results,
